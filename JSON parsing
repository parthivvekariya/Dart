///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import 'dart:convert';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(MaterialApp(home: Task(),));
}

class Task extends StatefulWidget {
  @override
  ViewState createState() => ViewState();
}

class ViewState extends State<Task> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Marvel Characters"),),
      body: FutureBuilder<List>(
        future: fetchData(),
        builder: (ctx, ss) {
          if (ss.hasData) {
            return Items(list: ss.data!);
          }
          if (ss.hasError) {
            return Center(
              child: Text('Network Not Found'),
            );
          }
          return Center(
            child: CircularProgressIndicator(),
          );
        },
      ),
    );
  }

  Future<List> fetchData() async {
    try {
      var response = await http.get(Uri.parse("https://simplifiedcoding.net/demos/marvel/"));
      if (response.statusCode == 200) {
        return jsonDecode(response.body);
      } else {
        throw Exception('Failed to load data');
      }
    } catch (error) {
      print('Error: $error');
      throw Exception('Network Not Found');
    }
  }
}

class Items extends StatelessWidget {
  final List list;

  Items({required this.list});

  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      itemCount: list == null ? 0 : list.length,
      itemBuilder: (ctx, i) {
        return CricketerCard(
          name: list[i]['name'],
          realName: list[i]['realname'],
          team: list[i]['team'],
          firstAppearance: list[i]['firstappearance'],
          createdBy: list[i]['createdby'],
          publisher: list[i]['publisher'],
          bio: list[i]['bio'],
          imageUrl: list[i]['imageurl'],
        );
      },
    );
  }
}

class CricketerCard extends StatelessWidget {
  final String name;
  final String realName;
  final String team;
  final String firstAppearance;
  final String createdBy;
  final String publisher;
  final String bio;
  final String imageUrl;

  CricketerCard({
    required this.name,
    required this.realName,
    required this.team,
    required this.firstAppearance,
    required this.createdBy,
    required this.publisher,
    required this.bio,
    required this.imageUrl,
  });

  @override
  Widget build(BuildContext context) {
    return Card(
      child: ListTile(
        leading: Image.network(
          imageUrl,
          width: 100,
          height: 100,
          fit: BoxFit.cover,
        ),
        title: Column(
          children: [
            Container(
              child: Column(
                children: [
                  Row(
                    children: [
                      Text("Name: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(name),
                    ],
                  ),
                  Row(
                    children: [
                      Text("Real Name: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(realName),
                    ],
                  ),
                  Row(
                    children: [
                      Text("Team: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(team),
                    ],
                  ),
                  Row(
                    children: [
                      Text("First Appearance: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(firstAppearance),
                    ],
                  ),
                  Row(
                    children: [
                      Text("Created By: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(createdBy),
                    ],
                  ),
                  Row(
                    children: [
                      Text("Publisher: ", style: TextStyle(fontWeight: FontWeight.bold)),
                      Text(publisher),
                    ],
                  ),
                  Row(
                    children: [
                      Text("Bio: ", style: TextStyle(fontWeight: FontWeight.bold)),
                    ],
                  ),
                  Text(bio),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
